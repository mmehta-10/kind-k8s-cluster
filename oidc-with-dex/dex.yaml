# SOURCE: https://github.com/dexidp/dex/blob/8b6ff2d401e42ec3c75796c2649be422eef4f5b2/examples/ldap/config-ldap.yaml
# The base path of Dex and the external name of the OpenID Connect service.
# This is the canonical URL that all clients MUST use to get authenticated with Dex. If a
# path is provided, Dex's HTTP service listens at a non-root URL.
issuer: https://oidc:5557/dex

# The storage configuration determines where Dex stores its state. Supported
# options include SQL flavors and Kubernetes third-party resources.
# See the documentation (https://dexidp.io/docs/storage/) for further information.
storage:
  type: sqlite3
  config:
    file: /tmp/dex.db

# If you bring your own certificates, update the HTTPS, tlsCert, and tlsKey values.
web:
#  http: 0.0.0.0:5556
  https: 0.0.0.0:5557
  tlsCert: /ssl/cert.pem
  tlsKey: /ssl/key.pem

connectors:
- type: ldap
  name: OpenLDAP
  id: ldap
  config:
    # The following configurations seem to work with OpenLDAP:
    #
    # 1) Plain LDAP, without TLS:
    host: ldap_ldap_1:389
    insecureNoSSL: true
    #
    # 2) LDAPS without certificate validation:
    #host: localhost:636
    #insecureNoSSL: false
    #insecureSkipVerify: true
    #
    # 3) LDAPS with certificate validation:
    #host: YOUR-HOSTNAME:636
    #insecureNoSSL: false
    #insecureSkipVerify: false
    #rootCAData: 'CERT'
    # ...where CERT="$( base64 -w 0 your-cert.crt )"

    # This would normally be a read-only user.
    bindDN: cn=admin,dc=example,dc=org
    bindPW: admin

    usernamePrompt: Email Address

    userSearch:
      baseDN: ou=People,dc=example,dc=org
      filter: "(objectClass=person)"
      username: mail
      # "DN" (case sensitive) is a special attribute name. It indicates that
      # this value should be taken from the entity's DN not an attribute on
      # the entity.
      idAttr: DN
      emailAttr: mail
      nameAttr: cn

    groupSearch:
      baseDN: ou=Groups,dc=example,dc=org
      filter: "(objectClass=groupOfNames)"

      userMatchers:
        # A user is a member of a group when their DN matches
        # the value of a "member" attribute on the group entity.
      - userAttr: DN
        groupAttr: member

      # The group name should be the "cn" value.
      nameAttr: cn

staticClients:
# Use with kubelogin 
# - id: kubernetes
#   redirectURIs:
#   - 'http://localhost:8000'
#   - 'http://localhost:18000'
#   name: 'Kubernetes'
#   secret: SuperSecretSecret
# Use with dex-k8s-authenticator
- id: kubernetes
  redirectURIs:
  - http://dex-k8s-authenticator.127.0.0.1.nip.io/callback
  name: 'Kubernetes'
  secret: SuperSecretSecret  

# A static list of passwords to log in the end user.
# After configuring this section, Dex does not look in its underlying storage for passwords.
# If this sectin is omitted, you add users through the Dex gRPC API.
enablePasswordDB: true

# staticPasswords:
# - email: "admin@example.com"
#   # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
#   hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
#   username: "admin"
#   userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
# - email: "user@example.com"
#   # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
#   hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
#   username: "user"
#   userID: "08a8684b-db88-4b73-90a9-3cd1661f5467"